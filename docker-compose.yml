# Docker Compose for Render deployment
# Complete Archon system with all services including agents

services:
  # Server Service (FastAPI + Socket.IO + Crawling)
  archon-server:
    build:
      context: ./python
      dockerfile: Dockerfile.server
    container_name: archon-server
    ports:
      - "8181:8181"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - LOG_LEVEL=INFO
      - ARCHON_SERVER_PORT=8181
      - ARCHON_MCP_PORT=8051
      - ARCHON_AGENTS_PORT=8052
      - AGENTS_ENABLED=true
    networks:
      - app-network
    command:
      [
        "python",
        "-m",
        "uvicorn",
        "src.server.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8181",
        "--reload",
      ]
    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          'python -c "import urllib.request; urllib.request.urlopen('"'"'http://localhost:8181/health'"'"')"',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # AI Agents Service (ML/Reranking)
  archon-agents:
    build:
      context: ./python
      dockerfile: Dockerfile.agents
    container_name: archon-agents
    ports:
      - "8052:8052"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - LOG_LEVEL=INFO
      - ARCHON_AGENTS_PORT=8052
      - ARCHON_SERVER_PORT=8181
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          'python -c "import urllib.request; urllib.request.urlopen('"'"'http://localhost:8052/health'"'"')"',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Lightweight MCP Server Service (HTTP-based)
  archon-mcp:
    build:
      context: ./python
      dockerfile: Dockerfile.mcp
    container_name: archon-mcp
    ports:
      - "8051:8051"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - TRANSPORT=sse
      - LOG_LEVEL=INFO
      - API_SERVICE_URL=http://archon-server:8181
      - AGENTS_ENABLED=true
      - AGENTS_SERVICE_URL=http://archon-agents:8052
      - ARCHON_MCP_PORT=8051
      - ARCHON_SERVER_PORT=8181
      - ARCHON_AGENTS_PORT=8052
    networks:
      - app-network
    depends_on:
      archon-server:
        condition: service_healthy
      archon-agents:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          'python -c "import socket; s=socket.socket(); s.connect(('"'"'localhost'"'"', 8051)); s.close()"',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend
  archon-frontend:
    build: ./archon-ui-main
    container_name: archon-ui
    ports:
      - "3737:3737"
    environment:
      - VITE_API_URL=http://localhost:8181
      - VITE_ARCHON_SERVER_PORT=8181
      - ARCHON_SERVER_PORT=8181
      - HOST=localhost
      - PROD=false
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3737"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      archon-server:
        condition: service_healthy

networks:
  app-network:
    driver: bridge